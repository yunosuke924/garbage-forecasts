AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  ca-sam-app-08-garbage-forecast
  
  Sample SAM Template for ca-sam-app-08-garbage-forecast

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 5
    MemorySize: 128
Parameters:
  Database:
    Type: String

Resources:
  CreateForecastsFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: create-forecasts/ # 実行するコードのディレクトリ
      Handler: create-forecasts # 実行バイナリーの名前
      Runtime: go1.x # 実行環境
      Architectures:
        - x86_64
      Events: # ここがLambda関数が実行されるトリガー
        CatchAll:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /forecasts
            Method: POST
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables: # 環境変数 キーバリュー
          PARAM1: VALUE
          DB_CONNECTION: !Ref Database
      # IAMロールのARN(ユニークなリソースネーム)
      Role: arn:aws:iam::880843126767:role/go-academy-lambda
  GetForecastsFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: get-forecasts/ # 実行するコードのディレクトリ
      Handler: get-forecasts # 実行バイナリーの名前
      Runtime: go1.x # 実行環境
      Architectures:
        - x86_64
      Events: # ここがLambda関数が実行されるトリガー
        CatchAll:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /forecasts
            Method: GET
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables: # 環境変数 キーバリュー
          PARAM1: VALUE
          DB_CONNECTION: !Ref Database
      # IAMロールのARN(ユニークなリソースネーム)
      Role: arn:aws:iam::880843126767:role/go-academy-lambda
  UploadCsvFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: upload-csv/ # 実行するコードのディレクトリ
      Handler: upload-csv # 実行バイナリーの名前
      Runtime: go1.x # 実行環境
      Architectures:
        - x86_64
      Events: # ここがLambda関数が実行されるトリガー
        CatchAll:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /upload
            Method: POST
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables: # 環境変数 キーバリュー
          PARAM1: VALUE
      # IAMロールのARN(ユニークなリソースネーム)
      Role: arn:aws:iam::880843126767:role/go-academy-lambda
  SetDataFromCsvScheduleFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: set-data-from-csv-schedule/ # 実行するコードのディレクトリ
      Handler: set-data-from-csv-schedule # 実行バイナリーの名前
      Runtime: go1.x
      Events:
        ScheduleEvent:
          Type: Schedule
          Properties:
            Schedule: cron(0 3 * * ? *) # 毎日夜3時に実行
      Role: arn:aws:iam::880843126767:role/go-academy-lambda

